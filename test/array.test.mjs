// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Vitest from "rescript-vitest/src/Vitest.mjs";
import * as Vitest$1 from "vitest";
import * as Fp_core__Array from "../src/fp_core__Array.mjs";

Vitest.test("map", undefined, (function (param) {
        Vitest$1.expect([
                  1,
                  2,
                  3
                ].map(function (n) {
                    return n + 1 | 0;
                  })).toEqual([
              2,
              3,
              4
            ]);
      }));

Vitest.test("mapWithIndex", undefined, (function (param) {
        Vitest$1.expect([
                  1,
                  2,
                  3
                ].map(function (n, i) {
                    return n + i | 0;
                  })).toEqual([
              1,
              3,
              5
            ]);
      }));

Vitest.test("filter", undefined, (function (param) {
        Vitest$1.expect([
                  1,
                  2,
                  3
                ].filter(function (n) {
                    return n <= 2;
                  })).toEqual([
              1,
              2
            ]);
      }));

Vitest.test("reduce", undefined, (function (param) {
        Vitest$1.expect(Fp_core__Array.reduce([
                    1,
                    2,
                    3
                  ], 0, (function (item, acc) {
                      return item + acc | 0;
                    }))).toEqual(6);
      }));

Vitest.test("reduceWithIndex", undefined, (function (param) {
        Vitest$1.expect(Fp_core__Array.reduceWithIndex([
                    1,
                    2,
                    3
                  ], 0, (function (item, i, acc) {
                      return (item + i | 0) + acc | 0;
                    }))).toEqual(9);
      }));

Vitest.test("reduceRight", undefined, (function (param) {
        Vitest$1.expect(Fp_core__Array.reduceRight([
                    1,
                    2,
                    3
                  ], 0, (function (item, acc) {
                      return item + acc | 0;
                    }))).toEqual(6);
      }));

Vitest.test("reduceRightWithIndex", undefined, (function (param) {
        Vitest$1.expect(Fp_core__Array.reduceRightWithIndex([
                    1,
                    2,
                    3
                  ], 0, (function (item, i, acc) {
                      return (item + i | 0) + acc | 0;
                    }))).toEqual(9);
      }));

Vitest.test("get", undefined, (function (param) {
        Vitest$1.expect(2).toEqual(2);
      }));

Vitest.test("head", undefined, (function (param) {
        Vitest$1.expect(Fp_core__Array.head([
                    1,
                    2,
                    3
                  ])).toEqual(1);
      }));

export {
  
}
/*  Not a pure module */
